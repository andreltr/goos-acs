# Python stubs generated by omniidl from ../idl/domeServer.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "acscomponent.idl"
import acscomponent_idl
_0_ACS = omniORB.openModule("ACS")
_0_ACS__POA = omniORB.openModule("ACS__POA")
# #include "corbaidl.idl"
import corbaidl_idl
_0_CORBA = omniORB.openModule("CORBA")
_0_CORBA__POA = omniORB.openModule("CORBA__POA")
# #include "boxes.idl"
import boxes_idl
_0_CORBA = omniORB.openModule("CORBA")
_0_CORBA__POA = omniORB.openModule("CORBA__POA")
# #include "CosProperty.idl"
import CosProperty_idl
_0_CosPropertyService = omniORB.openModule("CosPropertyService")
_0_CosPropertyService__POA = omniORB.openModule("CosPropertyService__POA")
# #include "acscommon.idl"
import acscommon_idl
_0_ACS = omniORB.openModule("ACS")
_0_ACS__POA = omniORB.openModule("ACS__POA")
_0_log_audience = omniORB.openModule("log_audience")
_0_log_audience__POA = omniORB.openModule("log_audience__POA")
_0_acscommon = omniORB.openModule("acscommon")
_0_acscommon__POA = omniORB.openModule("acscommon__POA")
# #include "acserr.idl"
import acserr_idl
_0_ACSErr = omniORB.openModule("ACSErr")
_0_ACSErr__POA = omniORB.openModule("ACSErr__POA")
# #include "baci.idl"
import baci_idl
_0_ACS = omniORB.openModule("ACS")
_0_ACS__POA = omniORB.openModule("ACS__POA")

#
# Start of module "domoServerModule"
#
__name__ = "domoServerModule"
_0_domoServerModule = omniORB.openModule("domoServerModule", r"../idl/domeServer.idl")
_0_domoServerModule__POA = omniORB.openModule("domoServerModule__POA", r"../idl/domeServer.idl")


# interface domoServerInterface
_0_domoServerModule._d_domoServerInterface = (omniORB.tcInternal.tv_objref, "IDL:alma/domoServerModule/domoServerInterface:1.0", "domoServerInterface")
omniORB.typeMapping["IDL:alma/domoServerModule/domoServerInterface:1.0"] = _0_domoServerModule._d_domoServerInterface
_0_domoServerModule.domoServerInterface = omniORB.newEmptyClass()
class domoServerInterface (_0_ACS.ACSComponent):
    _NP_RepositoryId = _0_domoServerModule._d_domoServerInterface[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_domoServerModule.domoServerInterface = domoServerInterface
_0_domoServerModule._tc_domoServerInterface = omniORB.tcInternal.createTypeCode(_0_domoServerModule._d_domoServerInterface)
omniORB.registerType(domoServerInterface._NP_RepositoryId, _0_domoServerModule._d_domoServerInterface, _0_domoServerModule._tc_domoServerInterface)

# domoServerInterface operations and attributes
domoServerInterface._d_getState = ((), (omniORB.tcInternal.tv_long, ), None)

# domoServerInterface object reference
class _objref_domoServerInterface (_0_ACS._objref_ACSComponent):
    _NP_RepositoryId = domoServerInterface._NP_RepositoryId

    def __init__(self):
        _0_ACS._objref_ACSComponent.__init__(self)

    def getState(self, *args):
        return _omnipy.invoke(self, "getState", _0_domoServerModule.domoServerInterface._d_getState, args)

    __methods__ = ["getState"] + _0_ACS._objref_ACSComponent.__methods__

omniORB.registerObjref(domoServerInterface._NP_RepositoryId, _objref_domoServerInterface)
_0_domoServerModule._objref_domoServerInterface = _objref_domoServerInterface
del domoServerInterface, _objref_domoServerInterface

# domoServerInterface skeleton
__name__ = "domoServerModule__POA"
class domoServerInterface (_0_ACS__POA.ACSComponent):
    _NP_RepositoryId = _0_domoServerModule.domoServerInterface._NP_RepositoryId


    _omni_op_d = {"getState": _0_domoServerModule.domoServerInterface._d_getState}
    _omni_op_d.update(_0_ACS__POA.ACSComponent._omni_op_d)

domoServerInterface._omni_skeleton = domoServerInterface
_0_domoServerModule__POA.domoServerInterface = domoServerInterface
omniORB.registerSkeleton(domoServerInterface._NP_RepositoryId, domoServerInterface)
del domoServerInterface
__name__ = "domoServerModule"

#
# End of module "domoServerModule"
#
__name__ = "domeServer_idl"

_exported_modules = ( "domoServerModule", )

# The end.
