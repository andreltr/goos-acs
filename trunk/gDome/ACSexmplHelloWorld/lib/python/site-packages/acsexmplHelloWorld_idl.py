# Python stubs generated by omniidl from ../idl/acsexmplHelloWorld.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "acscomponent.idl"
import acscomponent_idl
_0_ACS = omniORB.openModule("ACS")
_0_ACS__POA = omniORB.openModule("ACS__POA")
# #include "acserr.idl"
import acserr_idl
_0_ACSErr = omniORB.openModule("ACSErr")
_0_ACSErr__POA = omniORB.openModule("ACSErr__POA")
# #include "ACSErrTypeCommon.idl"
import ACSErrTypeCommon_idl
_0_ACSErr = omniORB.openModule("ACSErr")
_0_ACSErr__POA = omniORB.openModule("ACSErr__POA")
_0_ACSErrTypeCommon = omniORB.openModule("ACSErrTypeCommon")
_0_ACSErrTypeCommon__POA = omniORB.openModule("ACSErrTypeCommon__POA")

#
# Start of module "acsexmplHelloWorld"
#
__name__ = "acsexmplHelloWorld"
_0_acsexmplHelloWorld = omniORB.openModule("acsexmplHelloWorld", r"../idl/acsexmplHelloWorld.idl")
_0_acsexmplHelloWorld__POA = omniORB.openModule("acsexmplHelloWorld__POA", r"../idl/acsexmplHelloWorld.idl")


# interface HelloWorld
_0_acsexmplHelloWorld._d_HelloWorld = (omniORB.tcInternal.tv_objref, "IDL:alma/acsexmplHelloWorld/HelloWorld:1.0", "HelloWorld")
omniORB.typeMapping["IDL:alma/acsexmplHelloWorld/HelloWorld:1.0"] = _0_acsexmplHelloWorld._d_HelloWorld
_0_acsexmplHelloWorld.HelloWorld = omniORB.newEmptyClass()
class HelloWorld (_0_ACS.ACSComponent):
    _NP_RepositoryId = _0_acsexmplHelloWorld._d_HelloWorld[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_acsexmplHelloWorld.HelloWorld = HelloWorld
_0_acsexmplHelloWorld._tc_HelloWorld = omniORB.tcInternal.createTypeCode(_0_acsexmplHelloWorld._d_HelloWorld)
omniORB.registerType(HelloWorld._NP_RepositoryId, _0_acsexmplHelloWorld._d_HelloWorld, _0_acsexmplHelloWorld._tc_HelloWorld)

# HelloWorld operations and attributes
HelloWorld._d_displayMessage = ((), (), None)
HelloWorld._d_badMethod = ((), (), {_0_ACSErrTypeCommon.UnknownEx._NP_RepositoryId: _0_ACSErrTypeCommon._d_UnknownEx})

# HelloWorld object reference
class _objref_HelloWorld (_0_ACS._objref_ACSComponent):
    _NP_RepositoryId = HelloWorld._NP_RepositoryId

    def __init__(self):
        _0_ACS._objref_ACSComponent.__init__(self)

    def displayMessage(self, *args):
        return _omnipy.invoke(self, "displayMessage", _0_acsexmplHelloWorld.HelloWorld._d_displayMessage, args)

    def badMethod(self, *args):
        return _omnipy.invoke(self, "badMethod", _0_acsexmplHelloWorld.HelloWorld._d_badMethod, args)

    __methods__ = ["displayMessage", "badMethod"] + _0_ACS._objref_ACSComponent.__methods__

omniORB.registerObjref(HelloWorld._NP_RepositoryId, _objref_HelloWorld)
_0_acsexmplHelloWorld._objref_HelloWorld = _objref_HelloWorld
del HelloWorld, _objref_HelloWorld

# HelloWorld skeleton
__name__ = "acsexmplHelloWorld__POA"
class HelloWorld (_0_ACS__POA.ACSComponent):
    _NP_RepositoryId = _0_acsexmplHelloWorld.HelloWorld._NP_RepositoryId


    _omni_op_d = {"displayMessage": _0_acsexmplHelloWorld.HelloWorld._d_displayMessage, "badMethod": _0_acsexmplHelloWorld.HelloWorld._d_badMethod}
    _omni_op_d.update(_0_ACS__POA.ACSComponent._omni_op_d)

HelloWorld._omni_skeleton = HelloWorld
_0_acsexmplHelloWorld__POA.HelloWorld = HelloWorld
omniORB.registerSkeleton(HelloWorld._NP_RepositoryId, HelloWorld)
del HelloWorld
__name__ = "acsexmplHelloWorld"

#
# End of module "acsexmplHelloWorld"
#
__name__ = "acsexmplHelloWorld_idl"

_exported_modules = ( "acsexmplHelloWorld", )

# The end.
