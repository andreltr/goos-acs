/*
 *
 * "@(#) $Id: irisCCDstopExposureAction.body,v 1.10 2005/03/09 14:46:30 tjuerges Exp $"
 *
 * $Log: irisCCDstopExposureAction.body,v $
 * Revision 1.10  2005/03/09 14:46:30  tjuerges
 * - Changed to be conform with the body architecture.
 *
 * Revision 1.9  2004/09/26 13:13:29  tjuerges
 * *** empty log message ***
 *
 *
 */

/*
 * Put in completion.[type|code] the completion error code.
 * By default it is set to Ok.
 *
 * Set old_component_status to any irisStatus.
 * The component will reflect this after exiting
 * this method.
 *
 * Already defined are int acs_error and ACS::Time time_stamp for DevIO calls.
 */

if((camera!=0)&&(camera->get_camera_running()))
{
  if((camera->get_exposure_running())||(waiting_for_next_exposure))
  {
    ACS_SHORT_LOG((LM_INFO,"irisCCD::stopExposureAction: Trying to stop exposure..."));
    camera->stop_running_exposure();
    stop_exposure=true;
  }
  else
  {
    ACS_SHORT_LOG((LM_ERROR,"irisCCD::stopExposureAction: No exposure running. No action taken."));
  }
}
else if(camera->get_camera_running()==false)
{
  ACS_SHORT_LOG((LM_ERROR,"irisCCD::stopExposureAction: No camera active."));
}
else
{
  ACS_SHORT_LOG((LM_ERROR,"irisCCD::stopExposureAction: No DO active. Call on action!"));
}
