/*
 * "@(#) $Id: irisCCDstartExposureAction.body,v 1.8 2005/03/09 14:46:30 tjuerges Exp $"
 *
 * $Log: irisCCDstartExposureAction.body,v $
 * Revision 1.8  2005/03/09 14:46:30  tjuerges
 * - Changed to be conform with the body architecture.
 *
 * Revision 1.7  2004/09/22 14:16:35  tjuerges
 * - F�r Simulation backgroundNoise und readoutNoise hinzugef�gt, rmsNoise entfernt.
 * - GUI speichert FITS auf Verlangen.
 * - GUI startet externes DS9 und beendet es.
 *
 *
 */

/*
 * Put in completion.[type|code] the completion error code.
 * By default it is set to Ok.
 *
 * Set old_component_status to any irisStatus.
 * The component will reflect this after exiting
 * this method.
 *
 * Already defined are int acs_error and ACS::Time time_stamp for DevIO calls.
 */

if((camera)&&(camera->get_camera_running())&&(!camera->get_exposure_running()))
{
  stop_exposure=false;
  getComponent()->getThreadManager()->resume("CameraExposureThread");
  ACS_SHORT_LOG((LM_INFO,"irisCCD::startExposureAction: OK. Camera thread resumed."));
  old_component_status=irisStatus::WORKING;
}
else if(!camera->get_camera_running())
{
  ACS_SHORT_LOG((LM_ERROR,"irisCCD::startExposureAction: No camera active."));
}
else if(camera->get_exposure_running())
{
  ACS_SHORT_LOG((LM_ERROR,"irisCCD::startExposureAction: Already exposing!"));
}
